# -*- coding: utf-8 -*-
"""File-integrity-checker.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u0JMztItEwGXiB15A5bnsFrIddnwLeZK
"""

import hashlib
import os
import json

# File to store hash values
HASH_STORE = "file_hashes.json"

def calculate_hash(file_path):
    """Calculate SHA-256 hash of a file."""
    hasher = hashlib.sha256()
    try:
        with open(file_path, "rb") as f:
            while chunk := f.read(4096):
                hasher.update(chunk)
        return hasher.hexdigest()
    except FileNotFoundError:
        print(f"File not found: {file_path}")
        return None

def save_hashes(hash_dict):
    """Save hash values to a JSON file."""
    with open(HASH_STORE, "w") as f:
        json.dump(hash_dict, f, indent=4)

def load_hashes():
    """Load hash values from JSON file."""
    if os.path.exists(HASH_STORE):
        with open(HASH_STORE, "r") as f:
            return json.load(f)
    return {}

def monitor_files(files):
    """Monitor files for changes by comparing hash values."""
    stored_hashes = load_hashes()
    current_hashes = {}

    for file in files:
        file_hash = calculate_hash(file)
        if file_hash:
            current_hashes[file] = file_hash

            if file in stored_hashes:
                if stored_hashes[file] != file_hash:
                    print(f"[ALERT] File changed: {file}")
                else:
                    print(f"[OK] File unchanged: {file}")
            else:
                print(f"[NEW] New file added: {file}")

    save_hashes(current_hashes)

if __name__ == "__main__":
    files_to_monitor = ["/content/drive/MyDrive/INTERNSHIPS/mini_PR_text.docx", "/content/drive/MyDrive/INTERNSHIPS/Code for Arduino blootooth controlled RC Car (1).txt"]  # Add files here
    monitor_files(files_to_monitor)

